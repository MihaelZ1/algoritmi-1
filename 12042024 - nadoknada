RUPA A


1. Napiši strukturu koja predstavlja Vozilo. Vozilo ima svojstva: Proizvođač, Model, GodinaProizvodnje, Snaga. Napiši funkciju koja služi za lijepi ispis parametra nekog vozila na ekran.
2. Napiši funkciju kojua nekom vozilu smanjuje snagu za 1. Ako se snaga može smanjiti - vrati 1. Ako je snaga vozila nula, snaga se ne može smanjiti te je potrebno vratiti 0. Varijabla koja predstavlja vozilo deklarirana je u main funkciji.
3. napiši program koji od korisnika traži unos vozila. Unesena vozila spremamo u polja. Neće biti više od 10 vozila.
4. Napiši strukturu koja predstavlja čvor koji potencijalno ima tri podčvora. Napiši funkciju koja vrati koliko čvorova ima u nekom stablu. Čvorovi mogu pokazivati na prijašnje čvorove.
-rez-

GRUPA B


1. Napiši strukturu koja predstavlja Osobu. Osoba ima ime te živi na nekoj Adresi. Adresa se sastoji od Naselje, ulica, kućni broj. Napiši funkciju za lijepi ispis parametara neke osobe. (svih podataka)
2. Napiši funkciju koja neku osobu "preseli" na X kućnih brojeva bliže. Ako se osoba uspješno preselila vrati 1. inače vrati 0.
3. Napiši funkciju koja od korisnika traži unos osobe i adrese. Unesene osobe spremaju se u polje od najviše 10 osoba.
4. Kreiraj strukturu koja predstavlja čvor koji potencijalno ima 100 podčvorova. Napiši funkciju koja vrati koliko čvorova ima u cijelom stablu.
-rez-


GRUPA A 1-3

#include <iostream>

using namespace std;

struct vozilo{
string proizvodac;
string model;
int godina;
int snaga;
};

void lijepiIspis(vozilo vo){
cout<<"Proizvodac: "<<vo.proizvodac<<endl;
cout<<"Model: "<<vo.model<<endl;
cout<<"Godina: "<<vo.godina<<endl;
cout<<"Snaga: "<<vo.snaga<<endl;
}

bool moze_smanjiti(vozilo *vo){
if((*vo).snaga==0)
    return 0;
if((*vo).snaga < (*vo).snaga+1)
    return 1;
}

int main(){
vozilo polje[3];

for(int i=0;i<3;i++){
cout<<"Unesite proizvodaca: ";
cin>>polje[i].proizvodac;
cout<<"Unesite model: ";
cin>>polje[i].model;
cout<<"Unesite godinu: ";
cin>>polje[i].godina;
cout<<"Unesite snagu: ";
cin>>polje[i].snaga;
cout<<endl<<endl;
}
cout<<endl;
cout<<"Ispis vozila: "<<endl<<endl;
for(int i=0;i<3;i++){
    lijepiIspis(polje[i]);
    cout<<endl;
    cout<<"Snaga 1 ili 0: ";
    cout<<moze_smanjiti(&polje[i]);
    cout<<endl;
}



return 0;
}
 4.

#include <iostream>

using namespace std;

struct Cvor {
    int vrijednost;
    struct Cvor *podcvor1;
    struct Cvor *podcvor2;
    struct Cvor *podcvor3;
    struct Cvor *prethodni;
};

int broj_cvorova(struct Cvor *korijen) {
    if (korijen == NULL)
        return 0;
    return 1 + broj_cvorova(korijen->podcvor1) + broj_cvorova(korijen->podcvor2) + broj_cvorova(korijen->podcvor3);
}

int main() {
    struct Cvor *korijen = NULL;

    int broj = broj_cvorova(korijen);
    cout << "Broj cvorova u stablu: " << broj;

    return 0;
}


GRUPA B 
1-3
#include <iostream>

using namespace std;

struct adresa{
string naselje;
string ulica;
int kucni;
};
struct osoba{
string ime;
adresa Adresa;
};
void lijepiIspis(osoba os){
cout<<"Ime: "<<os.ime<<endl;
cout<<"Naselje: "<<os.Adresa.naselje<<endl;
cout<<"Ulica: "<<os.Adresa.ulica<<endl;
cout<<"Kucni broj: "<<os.Adresa.kucni<<endl;
}
bool preseli(osoba *osobe, string ime, int smanjenje) {
for (int i = 0; i < 3; ++i) {
if (osobe[i].ime == ime) {
osobe[i].Adresa.kucni -= smanjenje;
return true;
}
}
return false;
}
int main(){
osoba polje[3];
for(int i=0;i<3;i++){
cout<<"Ime: ";
cin>>polje[i].ime;
cout<<"Naselje: ";
cin>>polje[i].Adresa.naselje;
cout<<"Ulica: ";
cin>>polje[i].Adresa.ulica;
cout<<"Kucni broj: ";
cin>>polje[i].Adresa.kucni;
cout<<endl<<endl;
}
cout<<endl<<"Lijepi ispis: "<<endl;
for(int i=0;i<3;i++){
    lijepiIspis(polje[i]);
    cout<<endl;
}
cout<<endl;
string imeM="Marko";
int kbr=2;
cout<<preseli(&polje[0],imeM,kbr)<<endl;
for(int i=0;i<3;i++){
    lijepiIspis(polje[i]);
    cout<<endl;
}
return 0;
}
4.
